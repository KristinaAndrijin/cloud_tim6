service: aws-tim6

frameworkVersion: '3'

provider:
  name: aws
  runtime: python3.9
  profile: serverlessUser
  region: eu-central-1
  stage: dev

functions:
  hello:
    handler: handler.hello
    events:
      - http:
          path: hello
          method: GET
          cors: true
          authorizer:
            type: COGNITO_USER_POOLS
            authorizerId:
              Ref: ApiGatewayAuthorizer

          # authorizers:
          #   # JWT API authorizer
          #   someJwtAuthorizer:
          #     identitySource: $request.header.Authorization
          #     issuerUrl: https://cognito-idp.us-east-1.amazonaws.com/us-east-1_xxxxx
          #     audience:
          #       - xxxx
          #       - xxxx
          # apiId: !Ref ApiGetwayApi
          # auth:
          #   authorizer: UsersCognitoAuthorizer
          # cors:
          #   allowedOrigins:
          #     - '*'
          #   allowedHeaders:
          #     - Authorization
          #   allowedMethods:
          #     - POST
          #   allowedCredentials:
          #     - true
          # authorizer:
          #   name: MyApiAuthorizer
          #   arn:
          #     Fn::GetAtt:
          #       - CognitoApiGatewayAuthorizer
          #       - Arn

resources:
  Resources:
    CognitoUserPool:
      Type: AWS::Cognito::UserPool
      Properties:
        UserPoolName: ${self:provider.stage}-user-pool
        # UsernameAttributes:
        #   - username
        AutoVerifiedAttributes:
          - email
          # - phone_number
        Policies:
          PasswordPolicy:
            MinimumLength: 8
            RequireLowercase: true
            RequireNumbers: true
            RequireSymbols: true
            RequireUppercase: true
        UsernameConfiguration:
          CaseSensitive: true
        AccountRecoverySetting:
          RecoveryMechanisms:
            - Name: verified_email
              Priority: 1
            - Name: verified_phone_number
              Priority: 2
        Schema:
          - AttributeDataType: String
            DeveloperOnlyAttribute: false
            Mutable: true
            Name: given_name
          - AttributeDataType: String
            DeveloperOnlyAttribute: false
            Mutable: true
            Name: family_name
          - AttributeDataType: String
            DeveloperOnlyAttribute: false
            Mutable: true
            Name: phone_number
          - AttributeDataType: String
            DeveloperOnlyAttribute: false
            Mutable: true
            Name: email
          - AttributeDataType: String
            DeveloperOnlyAttribute: false
            Mutable: true
            Name: preferred_username
          - AttributeDataType: String 
            DeveloperOnlyAttribute: false
            Mutable: true
            Name: birthdate
        # EmailVerificationSubject: Verify your email for our app
        # EmailVerificationMessage: Please click the link below to verify your email address. {####} is your verification code.
        # SmsVerificationMessage: Your verification code for our app is {####}
        # MfaConfiguration: ON
        EmailConfiguration: 
          EmailSendingAccount: COGNITO_DEFAULT

    CognitoUserPoolClient:
      Type: AWS::Cognito::UserPoolClient
      Properties:
        ClientName: ${self:provider.stage}-user-pool-client
        UserPoolId: !Ref CognitoUserPool
        GenerateSecret: false
        ExplicitAuthFlows:
          - ADMIN_NO_SRP_AUTH
        TokenValidityUnits:
          AccessToken: minutes 
          IdToken: minutes 
          RefreshToken: days
        AccessTokenValidity: 30
        IdTokenValidity: 60
        RefreshTokenValidity: 10
        DefaultRedirectURI: http://localhost:4200/
        CallbackURLs: 
          - http://localhost:4200/
        LogoutURLs: 
          - http://localhost:4200/login
        SupportedIdentityProviders:
          - COGNITO
        AllowedOAuthFlows:
          - code
          - implicit
        AllowedOAuthScopes:
          - openid
          - email
          - profile

    ApiGatewayRestApi:
      Type: AWS::ApiGateway::RestApi
      Properties:
        Name: ApiGateway


    CognitoUserPoolDomain:
      Type: AWS::Cognito::UserPoolDomain
      Properties:
        Domain: album6
        UserPoolId: !Ref CognitoUserPool


    # CognitoApiGatewayAuthorizer:
    #   Type: AWS::ApiGateway::Authorizer
    #   Properties:
    #     RestApiId:
    #       Ref: ApiGatewayRestApi
    #     Name: MyApiAuthorizer
    #     Type: COGNITO_USER_POOLS
    #     IdentitySource: method.request.header.Authorization
    #     ProviderARNs:
    #       - Fn::GetAtt: [CognitoUserPool, Arn]

    ApiGatewayAuthorizer:
      DependsOn:
        - ApiGatewayRestApi
      Type: AWS::ApiGateway::Authorizer
      Properties:
        Name: cognito-authorizer
        IdentitySource: method.request.header.Authorization
        RestApiId:
          Ref: ApiGatewayRestApi
        Type: COGNITO_USER_POOLS
        ProviderARNs:
          - Fn::GetAtt: [CognitoUserPool, Arn]

